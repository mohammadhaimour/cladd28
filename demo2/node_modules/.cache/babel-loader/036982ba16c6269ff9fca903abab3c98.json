{"ast":null,"code":"var _jsxFileName = \"/home/mohammad/frontend/cladd28/demo2/src/componnents/People.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function People() {\n  _s();\n\n  const [People, setPeople] = useState([]);\n  const [name, setName] = useState(''); // useEffect(() => {\n  //     console.log('i will run evry render');\n  // });\n\n  useEffect(() => {\n    console.log('i will run on name change');\n  }, [name]);\n  useEffect(() => {\n    console.log('i will run on add to list');\n  }, [People]);\n\n  const inputHandler = e => {\n    setName(e.target.value);\n  };\n\n  const addPerson = e => {\n    e.preventDefault();\n    e.target.reset(); //setPeople([name]);//not correct\n    //we will solve the problem using spread operators\n\n    setPeople([...People, name]); // var part = ['one', 'two'];\n    // var total = ['x', 'y', ...part, 'z'];\n    // var total2 = [...part, 'x', 'y', 'z'];\n    // console.log(total);//  ['x','y','one','two','z']\n    // console.log(total2);//  ['one','two','x','y','z']\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" your name \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addPerson,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: inputHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"list of names\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), People.map((item, idx) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: item\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(People, \"Dtp1mOwgZvOkDG71dYi6TY4CiJ8=\");\n\n_c = People;\n\nvar _c;\n\n$RefreshReg$(_c, \"People\");","map":{"version":3,"names":["React","useEffect","useState","People","setPeople","name","setName","console","log","inputHandler","e","target","value","addPerson","preventDefault","reset","map","item","idx"],"sources":["/home/mohammad/frontend/cladd28/demo2/src/componnents/People.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\n\nexport default function People() {\n    const [People, setPeople] = useState([]);\n    const [name, setName] = useState('');\n    // useEffect(() => {\n    //     console.log('i will run evry render');\n    // });\n    useEffect(() => {\n        console.log('i will run on name change');\n    }, [name]);\n    useEffect(() => {\n        console.log('i will run on add to list');\n    }, [People]);\n\n    const inputHandler = (e) => {\n        setName(e.target.value);\n    }\n\n    const addPerson = (e) => {\n        e.preventDefault();\n        e.target.reset();\n        //setPeople([name]);//not correct\n        //we will solve the problem using spread operators\n        setPeople([...People, name]);\n\n        // var part = ['one', 'two'];\n        // var total = ['x', 'y', ...part, 'z'];\n        // var total2 = [...part, 'x', 'y', 'z'];\n\n        // console.log(total);//  ['x','y','one','two','z']\n        // console.log(total2);//  ['one','two','x','y','z']\n\n    }\n    return (\n        <div>\n            <h1> your name </h1>\n            <h3>{name}</h3>\n            <form onSubmit={addPerson}>\n                <input onChange={inputHandler}></input>\n\n            </form>\n            <p>list of names</p>\n            {\n                People.map((item, idx) => {\n                    return (\n                        <div key={idx}>\n                            {item}\n                        </div>\n                    )\n                })\n            }\n\n        </div>\n    )\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,eAAe,SAASC,MAAT,GAAkB;EAAA;;EAC7B,MAAM,CAACA,MAAD,EAASC,SAAT,IAAsBF,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC,CAF6B,CAG7B;EACA;EACA;;EACAD,SAAS,CAAC,MAAM;IACZM,OAAO,CAACC,GAAR,CAAY,2BAAZ;EACH,CAFQ,EAEN,CAACH,IAAD,CAFM,CAAT;EAGAJ,SAAS,CAAC,MAAM;IACZM,OAAO,CAACC,GAAR,CAAY,2BAAZ;EACH,CAFQ,EAEN,CAACL,MAAD,CAFM,CAAT;;EAIA,MAAMM,YAAY,GAAIC,CAAD,IAAO;IACxBJ,OAAO,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;EACH,CAFD;;EAIA,MAAMC,SAAS,GAAIH,CAAD,IAAO;IACrBA,CAAC,CAACI,cAAF;IACAJ,CAAC,CAACC,MAAF,CAASI,KAAT,GAFqB,CAGrB;IACA;;IACAX,SAAS,CAAC,CAAC,GAAGD,MAAJ,EAAYE,IAAZ,CAAD,CAAT,CALqB,CAOrB;IACA;IACA;IAEA;IACA;EAEH,CAdD;;EAeA,oBACI;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAA,UAAKA;IAAL;MAAA;MAAA;MAAA;IAAA,QAFJ,eAGI;MAAM,QAAQ,EAAEQ,SAAhB;MAAA,uBACI;QAAO,QAAQ,EAAEJ;MAAjB;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAHJ,eAOI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAPJ,EASQN,MAAM,CAACa,GAAP,CAAW,CAACC,IAAD,EAAOC,GAAP,KAAe;MACtB,oBACI;QAAA,UACKD;MADL,GAAUC,GAAV;QAAA;QAAA;QAAA;MAAA,QADJ;IAKH,CAND,CATR;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAqBH;;GArDuBf,M;;KAAAA,M"},"metadata":{},"sourceType":"module"}